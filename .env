# Install boilerplate utils if it's not installed
# Restrict to a minor version since major changes may happen in the future

# Only allow execution of .env in the top level.
if [ -e '.env' ]; then
    MIN_BUILDUTILS=0.2.0
    MAX_BUILDUTILS=0.3.0

    if [ ! -e .buildutils_version ]; then
        if ! pip3 freeze | grep flask-boilerplate-buildutils > /dev/null; then
            pip3 install "flask-boilerplate-buildutils<$MAX_BUILDUTILS,>=$MIN_BUILDUTILS" --upgrade;
        fi
        pip3 show flask-boilerplate-buildutils | grep Version | sed 's/Version: //' > .buildutils_version;
    fi

    MAJOR=`cat .buildutils_version | cut -d"." -f 1`
    MINOR=`cat .buildutils_version | cut -d"." -f 2`
    BUILD=`cat .buildutils_version | cut -d"." -f 3`

    if [ $MAJOR -ne 0 ] || [ $MINOR -ne 2 ]; then
        echo "An out of date version of flask-boilerplate-buildutils was detected. Upgrading.";
        pip3 install "flask-boilerplate-buildutils<$MAX_BUILDUTILS,>=$MIN_BUILDUTILS" --upgrade;
        pip3 show flask-boilerplate-buildutils | grep Version | sed 's/Version: //' > .buildutils_version;
    fi

    # Use boilerplate utils to set up the environment
    source flaskenv.sh
fi

